name: Workflow Template - deploy environment
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
jobs:
  ping:
    uses: ./.github/workflows/ping.yml
    permissions:
      contents: read
      id-token: write
    secrets: inherit
    with:
      environment: ${{ inputs.environment }}
  build-push:
    runs-on: 
      - self-hosted
      - ${{ inputs.environment }}
    timeout-minutes: 5
    permissions:
      contents: read
      id-token: write
    steps:
    - name: Extract tag name
      shell: bash
      run: |-
        t=$(echo ${GITHUB_SHA} | cut -c1-7)
        echo "tag=$t" >> $GITHUB_OUTPUT
      id: extract_tag
    - uses: 'actions/checkout@v4'
    - name: Get php version
      shell: bash
      run: |-
        PHP_VERSION=$(yq .php libops.yml)
        echo "version=$PHP_VERSION" >> $GITHUB_OUTPUT
      id: php_version
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: ${{ secrets.GCLOUD_OIDC_POOL }}
        create_credentials_file: true
        service_account: ${{ secrets.GSA }}
        token_format: 'access_token'
    - uses: docker/login-action@v3
      name: 'Docker login'
      with:
        registry: 'us-docker.pkg.dev'
        username: 'oauth2accesstoken'
        password: '${{ steps.auth.outputs.access_token }}'
    - name: Build and push Drupal
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        build-args: PHP_VERSION=${{steps.php_version.outputs.version}}
        tags: |
          us-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/private/drupal:${{ inputs.environment }}
          us-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/private/drupal:${{ inputs.environment }}-${{steps.extract_tag.outputs.tag}}
  deploy:
    needs: [ping, build-push]
    runs-on: 
      - self-hosted
      - ${{ inputs.environment }}
    timeout-minutes: 10
    permissions:
      contents: read
      id-token: write
    steps:
    - uses: 'actions/checkout@v4'
    - name: Deploy
      run: |-
        set -eou pipefail

        STATUS=$(curl -s \
          -X POST \
          -w '%{http_code}' \
          -o /dev/null \
          -d "tag=${{ inputs.environment }}-${{steps.extract_tag.outputs.tag}}" \
          http://localhost:8888/deploy)
        echo "Deploy returned ${STATUS}"
        if [ ${STATUS} -gt 299 ]; then
          echo "Failed to deploy"
          exit 1
        fi
